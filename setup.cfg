[metadata]
name = AIS-PARSER
summary = Python AIS Tools
author = Madjid Taoualit
author-email = taoualitmadjid2@gmail.com
home-page = http://...
description-file = README.md
# Classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifier =
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Intended Audience :: Education
    Natural Language :: English
    Topic :: Scientific/Engineering

[entry_points]
# Add here console scripts like:
console_scripts = ais_parser = ais_parser.cli:main

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
    ais_parser

[extras]
# Add here additional requirements for extra features

[test]
# py.tests options when running `python setup.py tests`
addopts = tests

[pytest]
# Options for py.tests:
# Specify command line options as you would do when invoking py.tests directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov ais_parser --cov-report html
    --verbose

[aliases]
docs = build_sphinx

[bdist_wheel]
# Use this option as package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[pbr]
# Let pbr run sphinx-apidoc
autodoc_tree_index_modules = True
# autodoc_tree_excludes = ...
# Let pbr itself generate the apidoc
# autodoc_index_modules = True
# autodoc_exclude_modules = ...
# Convert warnings to errors
# warnerrors = True

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS exports must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel
